#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;

            tapping-term-ms = <250>;
        };

        tap_pref: tap_pref {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREF";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_pref: hold_pref {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_PREF";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        opt_cmd: opt_cmd {
            compatible = "zmk,behavior-tap-dance";
            label = "OPT_CMD";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp RALT>, <&kp RGUI>;
        };

        cmd_shift: cmd_shift {
            compatible = "zmk,behavior-tap-dance";
            label = "CMD_SHIFT";
            #binding-cells = <0>;
            bindings = <&kp LGUI>, <&sshift LEFT_SHIFT>;

            tapping-term-ms = <300>;
        };

        sshift: sshift {
            compatible = "zmk,behavior-sticky-key";
            label = "SSHIFT";
            bindings = <&kp>;
            #binding-cells = <1>;
            quick-release;
            release-after-ms = <1000>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        qw_escape {
            bindings = <&kp ESC>;
            key-positions = <2 1>;
            timeout-ms = <20>;
            layers = <0>;
        };
    };

    macros {
        ccopy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(C)>;
            label = "COPY";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB      &kp Q                     &kp W                 &kp E              &kp R                   &kp T                               &kp UP                &kp Y        &kp U                    &kp I             &kp O                  &kp P                 &kp BSPC
&shift_caps  &tap_pref LEFT_CONTROL A  &tap_pref LEFT_ALT S  &tap_pref LGUI D   &tap_pref LEFT_SHIFT F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &tap_pref RIGHT_SHIFT J  &tap_pref RGUI K  &tap_pref RIGHT_ALT L  &tap_pref RCTRL SEMI  &shift_caps
&kp LCTRL    &kp Z                     &kp X                 &tap_pref LG(C) C  &tap_pref LG(V) V       &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M                    &kp COMMA         &kp DOT                &kp FSLH              &kp RCTRL
                                                             &cmd_shift         &mo 1                   &lt 4 SPACE                                               &lt 3 ENTER  &mo 2                    &opt_cmd
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                                              &mmv MOVE_UP                     &kp N6    &kp N7              &kp N8    &kp N9     &kp N0    &kp DEL
&trans  &none   &none   &none   &none   &kp PIPE                            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &kp DOWN            &kp UP    &kp RIGHT  &kp HOME  &kp PG_UP
&trans  &none   &none   &none   &none   &kp NON_US_BACKSLASH  &kp C_MUTE                    &mmv MOVE_DOWN                   &none     &none               &none     &none      &kp END   &kp PG_DN
                        &trans  &trans  &trans                                                                               &kp INS   &sshift LEFT_SHIFT  &sk RGUI
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL  &kp AT           &kp HASH           &kp DLLR               &kp PRCNT                                 &mmv MOVE_UP                     &kp CARET      &kp AMPS               &kp ASTRK          &trans           &trans  &kp BSPC
&trans  &none     &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp EQUAL                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp COLON      &kp LEFT_PARENTHESIS   &kp LEFT_BRACKET   &kp LEFT_BRACE   &none   &trans
&trans  &none     &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp UNDERSCORE  &trans                    &mmv MOVE_DOWN                   &kp SEMICOLON  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp RIGHT_BRACE  &none   &trans
                                   &trans             &sshift LEFT_SHIFT     &kp SPACE                                                                  &kp RET        &trans                 &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_pseudo {
            bindings = <
&trans  &none  &none      &none             &none           &none                              &none         &none      &none           &none             &none                 &none  &trans
&trans  &none  &kp GRAVE  &kp GREATER_THAN  &kp EQUAL       &kp DOUBLE_QUOTES           &none  &none  &none  &kp PLUS   &kp EQUAL       &kp GREATER_THAN  &kp PIPE              &none  &trans
&trans  &none  &kp TILDE  &kp LESS_THAN     &kp UNDERSCORE  &kp SQT            &none           &none         &kp MINUS  &kp UNDERSCORE  &kp LESS_THAN     &kp NON_US_BACKSLASH  &none  &trans
                          &trans            &trans          &none                                            &trans     &trans          &trans
            >;

            label = "pseudosym";
        };

        function {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2        &kp F3        &kp F4            &kp F5                                    &mmv MOVE_UP                     &kp F6        &kp F7        &kp F8         &kp F9         &kp F10  &kp F11
&sys_reset      &soft_off   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &trans                    &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none         &mkp LCLK     &mkp MCLK      &mkp RCLK      &trans   &trans
&bootloader     &bt BT_CLR  &out OUT_USB  &out OUT_BLE  &kp K_PLAY_PAUSE  &kp K_MUTE  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DEC  &kp C_BRI_INC  &trans   &trans
                                          &trans        &trans            &trans                                                                     &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "Fn";
        };
    };
};
